Vagrant.configure("2") do |config|
    config.vm.box = "generic/ubuntu2004"
  
# Gateway
    config.vm.define :gw do |gwconf|
      gwconf.vm.hostname = "gw"
      gwconf.vm.provider "libvirt" do |kvm|
        kvm.memory = "1024"
        kvm.cpus = 1
      end

      # Network net1
      gwconf.vm.network "private_network", 
        :ip => '192.168.150.1',
        libvirt__netmask: '255.255.255.0',
        libvirt__network_name: 'net1',
        libvirt__dhcp_enabled: false,
        libvirt__forward_mode: 'open'

      # Network net2
      gwconf.vm.network "private_network", 
        :ip => "192.168.250.1",
        libvirt__netmask: "255.255.255.0",
        libvirt__network_name: "net2",
        libvirt__dhcp_enabled: false,
        libvirt__forward_mode: "open"
  
      gwconf.vm.provision "Conf", type: "shell", inline: <<-SHELL

        sudo apt install -y net-tools

        sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf
        sysctl -p /etc/sysctl.conf 

        echo -e "[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n\n[Install]\nWantedBy=multi-user.target" | sudo tee /etc/systemd/system/my-startup-firewall.service
        systemctl enable my-startup-firewall.service
        systemctl start my-startup-firewall.service
      SHELL
    end
 
  # Host on network 1
  
    config.vm.define :net1 do |host1_net1_conf|
      host1_net1_conf.vm.hostname = "net1"
      host1_net1_conf.vm.provider "libvirt" do |kvm|
        kvm.memory = "1024"
        kvm.cpus = 1
      end
      host1_net1_conf.vm.network "private_network",
        :ip => "192.168.150.10",
        libvirt__netmask: "255.255.255.0",
        libvirt__network_name: "net1",
        libvirt__dhcp_enabled: false,
        libvirt__forward_mode: "open"

      # Disable eth0
      host1_net1_conf.vm.provision "disable_eth0", type: "shell", inline: <<-SHELL

        sudo apt install -y net-tools

        endereco=$(ls -l /sys/class/net/ | grep eth0 | grep -oE "[0-9]{4}:[0-9]{2}:[0-9]{2}.[0-9]")
        echo -e "SUBSYSTEM==<net<, ACTION==<add<,  RUN+=</bin/sh -c >echo 1 | /usr/bin/tee /sys/bus/pci/devices/$endereco/remove><" | sudo tee /etc/udev/rules.d/90-disable-eth0.rules

        sed -i "s/>/'/g" /etc/udev/rules.d/90-disable-eth0.rules
        sed -i 's/</"/g' /etc/udev/rules.d/90-disable-eth0.rules

        echo 1 | sudo tee /sys/bus/pci/devices/$endereco/remove
      SHELL
    end
  
  
  # Host on network 2
  
    config.vm.define :net2 do |host2_net2_conf|
      host2_net2_conf.vm.hostname = "net2"
      host2_net2_conf.vm.provider "libvirt" do |kvm|
        kvm.memory = "1024"
        kvm.cpus = 1
      end
      host2_net2_conf.vm.network "private_network", 
        :ip => "192.168.250.10",
        libvirt__netmask: "255.255.255.0",
        libvirt__network_name: "net2",
        libvirt__dhcp_enabled: false,
        libvirt__forward_mode: "open"

      # Disable eth0
      host2_net2_conf.vm.provision "disable_eth0", type: "shell", inline: <<-SHELL

	sudo apt install -y net-tools

        endereco=$(ls -l /sys/class/net/ | grep eth0 | grep -oE "[0-9]{4}:[0-9]{2}:[0-9]{2}.[0-9]")
        echo -e "SUBSYSTEM==<net<, ACTION==<add<,  RUN+=</bin/sh -c >echo 1 | /usr/bin/tee /sys/bus/pci/devices/$endereco/remove><" | sudo tee /etc/udev/rules.d/90-disable-eth0.rules

        sed -i "s/>/'/g" /etc/udev/rules.d/90-disable-eth0.rules
        sed -i 's/</"/g' /etc/udev/rules.d/90-disable-eth0.rules

        echo 1 | sudo tee /sys/bus/pci/devices/$endereco/remove
      SHELL
    end
  
  # End final.
end
